#
# In this config all containers can talk to each other on the given networks.
# But the ip address given in one network can be on the same range as the one
# given on another netwrok. I want all to be different VLANS.
#
# https://stackoverflow.com/questions/72216583/docker-compose-networking-priority-property-ignored
#
# Fri 2023Jun02 22:18:26 PDT
#
# version: "2.13.0"

services:

#
# NETUTILS
#  
  netutils2:
    image: nicolaka/netshoot
    networks:
      net1:
        priority: 10
        ipv4_address: "172.27.1.4"
      net2:
        priority: 0
      net3:
        priority: 0
    hostname: netutils2
    container_name: netutils2
    restart: on-failure
    volumes:
      - "./:/hostdata"         
    command: ["sleep", "infinity"]

#
# PGADMIN
# Mon 2023Jan16 17:18:03 PST
#
  pgadmin-2:
    container_name: pgadmin-2
    image: dpage/pgadmin4:latest
    networks:
      net1:
        priority: 10
        ipv4_address: "172.27.1.6"
      net2:
        priority: 0
      net3:
        priority: 0       
    environment:
      - PGADMIN_DEFAULT_EMAIL=devuser@localnet.net
      - PGADMIN_DEFAULT_PASSWORD=abc12345
    ports:
      - "5050:80"
    restart: always

#
# PROMETHEUS
# Sun 2022Dec04 18:35:39 PST
#   
  prometheus-2:
    image: prom/prometheus    
    hostname: prometheus-2
    container_name: prometheus-2
    networks:
      net1:
        priority: 10
        ipv4_address: "172.27.1.7"
      net2:
        priority: 0
      net3:
        priority: 0     
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - 9090:9090
    restart: unless-stopped
    volumes:
      - "./:/hostdata"  
      - ./prometheus:/etc/prometheus
      - prom_data:/prometheus

#
# GRAFANA
# Sun 2022Dec04 18:35:39 PST
#     
  grafana-2:
    image: grafana/grafana
    hostname: grafana-2
    container_name: grafana-2
    networks:
      net1:
        priority: 10
        ipv4_address: "172.27.1.8"
      net2:
        priority: 0
      net3:
        priority: 0     
    ports:
      - 3000:3000
    restart: unless-stopped
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=grafana
    volumes:
      - "./:/hostdata"      
      - ./grafana:/etc/grafana/provisioning/datasources

#
# PORTAINER
# Sun 2022Dec04 18:35:39 PST
#
  portainer-2:
    image: portainer/portainer-ce:alpine
    hostname: portainer-2
    container_name: portainer-2
    networks:
      net1:
        priority: 10
        ipv4_address: "172.27.1.9"
      net2:
        priority: 0
      net3:
        priority: 0     
    command: -H unix:///var/run/docker.sock
    ports:
      - "9000:9000"
    volumes:
      - "/var/run/docker.sock:/var/run/docker.sock"
      - "portainer_data:/app"
    restart: always

#
# SPLUNK
# https://splunk.github.io/docker-splunk/EXAMPLES.html#create-standalone-from-compose
#
  splunk2:
    image: splunk/splunk:latest
    hostname: splunk2
    container_name: splunk2
    networks:
      net1:
        priority: 10
        ipv4_address: "172.27.1.10"
      net2:
        priority: 0
      net3:
        priority: 0     
    environment:
      - SPLUNK_START_ARGS=--accept-license
      - SPLUNK_LICENSE_URI=Fee
      - SPLUNK_PASSWORD=abc12345
    ports:
      - 8000:8000            
    volumes:
      - "./:/hostdata"
      
#
# CLIENT - CentOS8
#  
  client1:
    image: centos:8.4.2105
    networks:
      net1:
        priority: 10
        ipv4_address: "172.27.1.11"
      net2:
        priority: 0
      net3:
        priority: 0
    hostname: client1
    container_name: client1
    privileged: true
    entrypoint: ["/usr/sbin/init"]
    restart: on-failure
    volumes:
      - "./:/hostdata"      
    command: ["sleep", "infinity"] 

#
# WITNESS - CentOS8
#  
  witness:
    image: centos:8.4.2105
    networks:
      net1:
        priority: 10
        ipv4_address: "172.27.1.3"
      net2:
        priority: 0
      net3:
        priority: 0
    hostname: witness
    container_name: witness
    privileged: true
    entrypoint: ["/usr/sbin/init"]
    restart: on-failure
    volumes:
      - "./:/hostdata"      
    command: ["sleep", "infinity"]  

#
# FIRST - CentOS8
#  
  pgnode1:
    image: centos:8.4.2105
    networks:
      net1:
        priority: 10
        ipv4_address: "172.27.1.2"
      net2:
        priority: 0
      net3:
        priority: 0
    hostname: pgnode1
    container_name: pgnode1
    privileged: true
    entrypoint: ["/usr/sbin/init"]
    restart: on-failure
    volumes:
      - "./:/hostdata"      
    command: ["sleep", "infinity"]      
#
# SECOND - CentOS8
#  
  pgnode2:
    image: centos:8.4.2105
    networks:
      net1:
        priority: 0
      net2:
        priority: 20
        ipv4_address: "172.28.1.2"            
      net3:
        priority: 0
    hostname: pgnode2
    container_name: pgnode2
    privileged: true
    entrypoint: ["/usr/sbin/init"]    
    restart: on-failure
    volumes:
      - "./:/hostdata"    
    command: ["sleep", "infinity"] 

#
# THIRD - CentOS8
#  
  pgnode3:
    image: centos:8.4.2105
    networks:   
      net1:
        priority: 0
      net2:
        priority: 0        
      net3:
        priority: 30
        ipv4_address: "172.29.1.2"           
    hostname: pgnode3
    container_name: pgnode3
    privileged: true
    entrypoint: ["/usr/sbin/init"]    
    restart: on-failure
    volumes:
      - "./:/hostdata"    
    command: ["sleep", "infinity"] 

networks:
  net1:
    ipam: 
      driver: default
      config:
        - subnet: "172.27.0.0/16"
          ip_range: "172.27.1.0/16"
  net2:
    ipam: 
      driver: default
      config:
        - subnet: "172.28.0.0/16"
          ip_range: "172.28.1.0/16"
  net3:
    ipam: 
      driver: default
      config:
        - subnet: "172.29.0.0/16" 
          ip_range: "172.29.1.0/16"

volumes:
  # portainer
  portainer_data:    
  # p8s
  prom_data:
  # postgres
  postgres_data:
