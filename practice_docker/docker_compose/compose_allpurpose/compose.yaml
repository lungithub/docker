#
# Spin up a DockerCompose env for Jenkins
# https://www.cloudbees.com/blog/how-to-install-and-run-jenkins-with-docker-compose
#
# Jenkins Docs
# https://www.jenkins.io/doc/
# 
# Once the container is running, to get the initial Jenkins password do
#   -> docker logs jenkins | less
#
# Login to the jenkins container
#   -> docker exec -it jenkins bash
# 
# This creates all jenkins config
#   - ./jenkins_configuration is on the mac in the same top dir where the compose file is
#   - /var/jenkins_home  is the jenkins homedir inside the container
#   - /hostdata is inside the container showing all macos top dir where the compoose file is
# --->
#  volumes:
#    - ./jenkins_configuration:/var/jenkins_home   
#    - ./:/hostdata
# <---
#
# In the container do 'cd /hostdata' to access files from the mactop, the docker host.
#
# :: JENKINS
#   CHANGE THE ADMIN PASSWORD as soon as you login for the first time.
#     user: admin
#     pass: aaaaaa
#
# :: SPLUNK
#     user:
#     pass:
#
# Sat 2025Jun21 21:11:34 PDT -- using dockio/u2204-devesp:2.0 updated today
# Mon 2023Aug21 18:22:39 PDT -- initial test deployment
# 

services:

#=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
####################               NETUTILS            ########################
#=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-  
# Sun 2022Dec04 18:35:39 PST
# This is a general purpose container with network utilities.
#
  netutils:
    image: nicolaka/netshoot:latest
    networks:
      custom-network:
        ipv4_address: "172.30.1.4"
    hostname: netutils
    container_name: netutils
    restart: on-failure
    volumes:
      - "./:/hostdata"
      - "/Users/orion/Documents/DATAM1/MyCode:/MyCode"     
      - "/Users/orion/Documents/DATAM2/learning/MyConfig:/MyConfig"
    command: ["sleep", "infinity"] 

#=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###################           JENKINS           ###############################
#=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
# Mon 2023Jan16 17:18:03 PST
# Based on Ubuntu. Use APT commands.
#
  jenkins-cicd:
    image: jenkins/jenkins:lts
    networks:
      custom-network:
        ipv4_address: "172.30.1.2"
    hostname: jenkins-cicd
    container_name: jenkins-cicd
    restart: on-failure
    privileged: true
    user: root
    ports:
      - 8080:8080
      - 50000:50000
    volumes:
      - ./jenkins_configuration:/var/jenkins_home
      - "./:/hostdata"
      - "/Users/orion/Documents/DATAM1/MyCode:/MyCode"     
      - "/Users/orion/Documents/DATAM2/learning/MyConfig:/MyConfig"       

#=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###################           SPLUNK           ###############################
#=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
# Mon 2023Jan16 17:18:03 PST
# https://splunk.github.io/docker-splunk/EXAMPLES.html#create-standalone-from-compose
#
  splunk-cicd:
    image: splunk/splunk:latest
    networks:
      custom-network:
        ipv4_address: "172.30.1.3"
    hostname: splunk-cicd
    container_name: splunk-cicd
    environment:
      - SPLUNK_START_ARGS=--accept-license
      - SPLUNK_LICENSE_URI=Fee
      - SPLUNK_PASSWORD=abc12345
    ports:
      - 8000:8000            
    volumes:
      - "./:/hostdata"
      - "/Users/orion/Documents/DATAM1/MyCode:/MyCode"     
      - "/Users/orion/Documents/DATAM2/learning/MyConfig:/MyConfig" 

#=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###################           UBUNTU           ###############################
#=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
# AGENT: ubuntu
#  
  devops-u1:
    image: dockio/u2204-devesp:2.0
    networks:
      custom-network:
        ipv4_address: "172.30.1.11"
    hostname: devops-u1
    container_name: devops-u1
    privileged: true
    restart: on-failure
    ports:
      - "9101:9100" # for p8s
      - "81:80"     # for nginx
      - "1443:443"  # for nginx
      - "8081:8080" # for nginx
    volumes:
      - "./:/hostdata" 
      - "/Users/orion/Documents/DATAM1/MyCode:/MyCode"     
      - "/Users/orion/Documents/DATAM2/learning/MyConfig:/MyConfig"
    entrypoint: ["/sbin/init"] # ubuntu only

#
# AGENT: ubuntu
# 
  devops-u2:
    image: dockio/u2204-devesp:2.0
    networks:
      custom-network:
        ipv4_address: "172.30.1.12"
    hostname: devops-u2
    container_name: devops-u2
    privileged: true
    restart: on-failure
    ports:
      - "9102:9100" # for p8s
      - "82:80"     # for nginx
      - "2443:443"  # for nginx
      - "8082:8080" # for nginx    
    volumes:
      - "./:/hostdata" 
      - "/Users/orion/Documents/DATAM1/MyCode:/MyCode"     
      - "/Users/orion/Documents/DATAM2/learning/MyConfig:/MyConfig"     
    entrypoint: ["/sbin/init"] # ubuntu only

#
# AGENT: ubuntu
# 
  devops-u3:
    image: dockio/u2204-devesp:2.0
    networks:
      custom-network:
        ipv4_address: "172.30.1.13"
    hostname: devops-u3
    container_name: devops-u3
    privileged: true
    restart: on-failure
    ports:
      - "9103:9100"     
    volumes:
      - "./:/hostdata"
      - "/Users/orion/Documents/DATAM1/MyCode:/MyCode"     
      - "/Users/orion/Documents/DATAM2/learning/MyConfig:/MyConfig"            
    entrypoint: ["/sbin/init"] # ubuntu only

#=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###################           RHEL           ###############################
#=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
#
# AGENT: rhel
# 
  devops-r1:
    image: dockio/rhel9-devesp:1.0
    networks:
      custom-network:
        ipv4_address: "172.30.1.21"
    hostname: devops-r1
    container_name: devops-r1
    privileged: true 
    restart: on-failure
    ports:
      - "9104:9100"     
    volumes:
      - "./:/hostdata" 
      - "/Users/orion/Documents/DATAM1/MyCode:/MyCode"     
      - "/Users/orion/Documents/DATAM2/learning/MyConfig:/MyConfig"          
    command: ["sleep", "infinity"] #rhel only

#
# AGENT: rhel
# 
  devops-r2:
    image: dockio/rhel9-devesp:1.0
    networks:
      custom-network:
        ipv4_address: "172.30.1.22"
    hostname: devops-r2
    container_name: devops-r2
    privileged: true   
    restart: on-failure
    ports:
      - "9105:9100"     
    volumes:
      - "./:/hostdata"
      - "/Users/orion/Documents/DATAM1/MyCode:/MyCode"     
      - "/Users/orion/Documents/DATAM2/learning/MyConfig:/MyConfig"     
    command: ["sleep", "infinity"] #rhel only

#=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###################           PROMETHEUS           ###########################
#=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
#
# PROMETHEUS
# Sun 2022Dec04 18:35:39 PST
#   
  prometheus-cicd:
    image: prom/prometheus
    networks:
      custom-network:
        ipv4_address: "172.30.1.31"
    hostname: prometheus-cicd
    container_name: prometheus-cicd
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    ports:
      - 9090:9090
    restart: unless-stopped
    volumes:
      - "./:/hostdata"       
      - ./prometheus:/etc/prometheus
      - prom_data:/prometheus

#=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###################           GRAFANA           ###############################
#=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=- 
# Sun 2022Dec04 18:35:39 PST
#     
  grafana-cicd:
    image: grafana/grafana
    networks:
      custom-network:
        ipv4_address: "172.30.1.32"
    hostname: grafana-cicd
    container_name: grafana-cicd
    ports:
      - 3000:3000
    restart: unless-stopped
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=grafana
    volumes:
      - "./:/hostdata"       
      - ./grafana:/etc/grafana/provisioning/datasources
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 5
    depends_on:
      - prometheus-cicd

#=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###################           GRAPHITE           ###########################
#=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
#
# GRAPHITE
# Sat 2025Jun28 19:51:59 PDT
#   
  graphite-cicd:
    image: graphiteapp/graphite-statsd
    networks:
      custom-network:
        ipv4_address: "172.30.1.33"
    hostname: graphite-cicd
    container_name: graphite-cicd
    ports:
      - 83:80
      - 2003-2004:2003-2004
      - 2023-2024:2023-2024
      - 8125:8125/udp
      - 8126:8126
    restart: unless-stopped
    volumes:
      - "./:/hostdata"
      - ./graphite:/opt/graphite/conf
      - graphite_data:/opt/graphite/storage


#=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###################           NETWORK           ###############################
#=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
networks:
  custom-network:
    ipam: 
      driver: default
      config:
        - subnet: "172.30.0.0/16"
          ip_range: "172.30.1.0/16"

#=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
###################           VOLUMES           ###############################
#=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-=-
volumes:
  # portainer
  portainer_data:    
  # p8s
  prom_data:
  # postgres
  postgres_data:
  # graphite
  graphite_data:
